{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default (function (url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Fetching Data\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (data) {\n                return data.json();\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n});","map":{"version":3,"sources":["C:/Users/shuge/Documents/Develop/Learning/CoronavirusAPI/utils/useStats.js"],"names":["useState","useEffect","url","stats","setStats","fetchData","console","log","fetch","then","data","json"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,UAACC,GAAD,EAAS;AAAA,kBACIF,QAAQ,EADZ;AAAA,MACfG,KADe;AAAA,MACRC,QADQ;;AAEtBH,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADF;AAAA,+CAEqBC,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAAAC,IAAI;AAAA,uBACrCA,IAAI,CAACC,IAAL,EADqC;AAAA,eAApB,CAFrB;;AAAA;AAEQD,cAAAA,IAFR;AAKEN,cAAAA,QAAQ,CAACM,IAAD,CAAR;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOAL,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAUA,SAAOF,KAAP;AACD,CAbD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default (url) => {\r\n  const [stats, setStats] = useState();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      console.log(\"Fetching Data\");\r\n      const data = await fetch(url).then(data =>\r\n        data.json()\r\n      );\r\n      setStats(data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  return stats;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}