{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default (function (url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setError();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (e) {\n                setError(e);\n              }));\n\n            case 4:\n              data = _context.sent;\n              setStats(data);\n              setLoading(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n});","map":{"version":3,"sources":["C:/Users/shuge/Documents/Develop/Learning/CoronavirusAPI/utils/useStats.js"],"names":["useState","useEffect","url","stats","setStats","loading","setLoading","error","setError","fetchData","fetch","then","res","json","e","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,UAAAC,GAAG,EAAI;AAAA,kBACMF,QAAQ,EADd;AAAA,MACbG,KADa;AAAA,MACNC,QADM;;AAAA,mBAEUJ,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEbK,OAFa;AAAA,MAEJC,UAFI;;AAAA,mBAGMN,QAAQ,EAHd;AAAA,MAGbO,KAHa;AAAA,MAGNC,QAHM;;AAKpBP,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeQ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,cAAAA,QAAQ;AAFV;AAAA,+CAGqBE,KAAK,CAACR,GAAD,CAAL,CAChBS,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,WAEV,UAAAC,CAAC,EAAI;AACVN,gBAAAA,QAAQ,CAACM,CAAD,CAAR;AACD,eAJgB,CAHrB;;AAAA;AAGQC,cAAAA,IAHR;AAQEX,cAAAA,QAAQ,CAACW,IAAD,CAAR;AACAT,cAAAA,UAAU,CAAC,KAAD,CAAV;;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAG,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACP,GAAD,CAbM,CAAT;AAcA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA,OAAT;AAAkBE,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD,CApBD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default url => {\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      setError()\r\n      const data = await fetch(url)\r\n        .then(res => res.json())\r\n        .catch(e => {\r\n          setError(e);\r\n        });\r\n      setStats(data);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return { stats, loading, error };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}