{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuge\\\\Documents\\\\Develop\\\\Learning\\\\CoronavirusAPI\\\\components\\\\CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from \"../utils/useStats\";\nconst url = `https://covid19.mathdro.id/api/countries`;\nexport default (() => {\n  const countries = useStats(url);\n  console.log(countries);\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Loading Countries...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([country, countryCode]) => {\n    __jsx(\"option\", {\n      value: countryCode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  })));\n});","map":{"version":3,"sources":["C:/Users/shuge/Documents/Develop/Learning/CoronavirusAPI/components/CountrySelector.js"],"names":["useStats","url","countries","console","log","Object","entries","map","country","countryCode"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,MAAMC,GAAG,GAAI,0CAAb;AAEA,gBAAe,MAAM;AACnB,QAAMC,SAAS,GAAGF,QAAQ,CAACC,GAAD,CAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACC,OAAP,CACCJ,SAAS,CAACA,SADX,EAECK,GAFD,CAEK,CAAC,CAACC,OAAD,EAAUC,WAAV,CAAD,KAA4B;AAAC;AAAQ,MAAA,KAAK,EAAEA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC,GAFxE,CADH,CADF,CADF;AASD,CAbD","sourcesContent":["import useStats from \"../utils/useStats\";\r\nconst url = `https://covid19.mathdro.id/api/countries`;\r\n\r\nexport default () => {\r\n  const countries = useStats(url);\r\n  console.log(countries);\r\n  if (!countries) return <p>Loading Countries...</p>;\r\n  return (\r\n    <div>\r\n      <select>\r\n        {Object.entries(\r\n          countries.countries\r\n        ).map(([country, countryCode]) => {<option value={countryCode}></option>})}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}