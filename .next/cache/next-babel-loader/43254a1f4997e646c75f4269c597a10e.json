{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport default (url => {\n  console.log(url);\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n      console.log(\"Updating or mounting\");\n      console.log(\"Fetching Data\");\n      const data = await fetch(url).then(res => res.json());\n      setLoading(true);\n      setStats(data);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error\n  };\n});","map":{"version":3,"sources":["C:/Users/shuge/Documents/Develop/Learning/CoronavirusAPI/utils/useStats.js"],"names":["useState","useEffect","url","console","log","stats","setStats","loading","setLoading","error","setError","fetchData","data","fetch","then","res","json"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAeC,GAAG,IAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,SAAf,GAA2B;AACzBH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,YAAMQ,IAAI,GAAG,MAAMC,KAAK,CAACX,GAAD,CAAL,CAAWY,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,CAAnB;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEAF,MAAAA,QAAQ,CAACM,IAAD,CAAR;AACD;;AACDD,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACT,GAAD,CAXM,CAAT;AAYA,SAAO;AAAEG,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACD,CAnBD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default url => {\r\n  console.log(url);\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      console.log(\"Updating or mounting\");\r\n      console.log(\"Fetching Data\");\r\n      const data = await fetch(url).then(res => res.json());\r\n      setLoading(true);\r\n\r\n      setStats(data);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return { stats, loading, error };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}