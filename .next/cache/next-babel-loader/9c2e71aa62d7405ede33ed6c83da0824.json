{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default (function (url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Uodating or mounting\");\n              console.log(\"Fetching Data\");\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (data) {\n                return data.json();\n              }));\n\n            case 4:\n              data = _context.sent;\n              setStats(data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return stats;\n});","map":{"version":3,"sources":["C:/Users/shuge/Documents/Develop/Learning/CoronavirusAPI/utils/useStats.js"],"names":["useState","useEffect","url","stats","setStats","fetchData","console","log","fetch","then","data","json"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,UAAAC,GAAG,EAAI;AAAA,kBACMF,QAAQ,EADd;AAAA,MACbG,KADa;AAAA,MACNC,QADM;;AAEpBH,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFF;AAAA,+CAGqBC,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,eAApB,CAHrB;;AAAA;AAGQD,cAAAA,IAHR;AAIEN,cAAAA,QAAQ,CAACM,IAAD,CAAR;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAL,IAAAA,SAAS;AACV,GARQ,EAQN,CAACH,GAAD,CARM,CAAT;AASA,SAAOC,KAAP;AACD,CAZD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default url => {\r\n  const [stats, setStats] = useState();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      console.log(\"Uodating or mounting\");\r\n      console.log(\"Fetching Data\");\r\n      const data = await fetch(url).then(data => data.json());\r\n      setStats(data);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return stats;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}