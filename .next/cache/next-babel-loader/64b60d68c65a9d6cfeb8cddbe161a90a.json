{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default (function (url) {\n  console.log(url);\n\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              console.log(\"Updating or mounting\");\n              console.log(\"Fetching Data\");\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](e));\n\n            case 5:\n              data = _context.sent;\n              setLoading(false);\n              setStats(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n});","map":{"version":3,"sources":["C:/Users/shuge/Documents/Develop/Learning/CoronavirusAPI/utils/useStats.js"],"names":["useState","useEffect","url","console","log","stats","setStats","loading","setLoading","error","setError","fetchData","fetch","then","res","json","e","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,gBAAe,UAAAC,GAAG,EAAI;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AADoB,kBAEMF,QAAQ,EAFd;AAAA,MAEbK,KAFa;AAAA,MAENC,QAFM;;AAAA,mBAGUN,QAAQ,CAAC,KAAD,CAHlB;AAAA,MAGbO,OAHa;AAAA,MAGJC,UAHI;;AAAA,mBAIMR,QAAQ,EAJd;AAAA,MAIbS,KAJa;AAAA,MAINC,QAJM;;AAMpBT,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeU,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAHF;AAAA,+CAIqBQ,KAAK,CAACV,GAAD,CAAL,CAAWW,IAAX,CAAgB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAnB,WAAyCC,CAAzC,CAJrB;;AAAA;AAIQC,cAAAA,IAJR;AAKET,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,cAAAA,QAAQ,CAACW,IAAD,CAAR;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQAN,IAAAA,SAAS;AACV,GAVQ,EAUN,CAACT,GAAD,CAVM,CAAT;AAWA,SAAO;AAAEG,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA,OAAT;AAAkBE,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD,CAlBD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default url => {\r\n  console.log(url);\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      console.log(\"Updating or mounting\");\r\n      console.log(\"Fetching Data\");\r\n      const data = await fetch(url).then(res => res.json()).catch(e);\r\n      setLoading(false);\r\n      setStats(data);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return { stats, loading, error };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}